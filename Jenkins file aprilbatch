pipeline
{

agent any

tools{
maven "maven3.8.4"
}

triggers {
  pollSCM '*  * * * *'
}

options {
//Discard old Build
  buildDiscarder logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')
//Adding the timestamps to console output
  timestamps()
}


stages{

//Checkout Code Stage
stage('CheckoutCode')
{
steps{
sendSlackNotifications('STARTED')
git branch: 'development', url: 'https://github.com/karunyasoftwaresolutions/maven-web-application.git'   
}
}

//Build Stage
stage('Build')
{
steps{
sh "mvn clean package"  
}
}

//Execute SonarQube Report
stage('ExecuteSonarQubeReport')
{
steps{
sh "mvn sonar:sonar"  
}
}


//Upload Artifacts Into Artifact repository 
stage('Upload Into Nexus')
{
steps{
sh "mvn deploy"  
}
}

stage('DeployAppIntoTomcatserver'){
steps{
sshagent(['0a25ad7a-defc-43b7-b0c1-4435723edb3e']) {
sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@172.31.34.245:/opt/apache-tomcat-9.0.63/webapps"
}
}
}

}//Stages closing

post {
  success {
     sendSlackNotifications('SUCCESS')
  }
  failure {
     sendSlackNotifications('FAILURE')
  }
}

}//pipeline closing

def sendSlackNotificationsnotifyBuild(String buildStatus = 'STARTED') {
  
  buildStatus =  buildStatus ?: 'SUCCESSFUL'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESSFUL') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary, channel: 'walmart')
}
